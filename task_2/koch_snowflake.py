import turtle  

def koch_curve(t, order, size):
    """
    Малює криву Коха.
    t: об'єкт turtle для малювання
    order: порядок кривої (рекурсивна глибина)
    size: розмір сегменту кривої
    """
    if order == 0:
        t.forward(size)  # Якщо порядок дорівнює 0, черепашка просто рухається вперед на відстань size.
    else:
        for angle in [60, -120, 60, 0]:  # В іншому випадку, повторює чотири рази з кутами повороту 60, -120, 60, і 0 градусів.
            koch_curve(t, order - 1, size / 3)  # Рекурсивно викликає функцію з меншим порядком і розміром в 1/3.
            t.left(angle)  # Повертає черепашку на відповідний кут.

def draw_koch_snowflake(order, size=300):
    """
    Налаштовує середовище для малювання сніжинки Коха.
    order: порядок кривої
    size: розмір сніжинки 
    """
    window = turtle.Screen()  # Створює вікно для малювання.
    window.bgcolor("black")  # Встановлює xthyb фон для вікна.

    t = turtle.Turtle()  # Створює об'єкт turtle для малювання.
    t.color("white")  # Встановлює білий колір для черепашки.
    t.speed(0)  # Встановлює максимальну швидкість черепашки.
    t.penup()  # Піднімає перо, щоб перемістити черепашку без малювання.
    t.goto(-size / 2, size / 3)  # Переміщує черепашку на початкову позицію для малювання першої сторони трикутника.
    t.pendown()  # Опускає перо для початку малювання.

    for _ in range(3):  # Малює три сторони трикутника.
        koch_curve(t, order, size)  # Викликає функцію для малювання кривої Коха.
        t.right(120)  # Повертає черепашку на 120 градусів для малювання наступної сторони.

    window.mainloop()  # Запускає головний цикл вікна, щоб воно залишалося відкритим до закриття користувачем.

# Виклик функції з можливістю вказати рівень рекурсії користувачем
order = int(input("Введіть порядок кривої Коха: "))
draw_koch_snowflake(order)  # Викликає функцію для малювання сніжинки Коха з порядком, вказаним користувачем.2

